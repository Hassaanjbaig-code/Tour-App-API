---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/reservations":
    get:
      summary: list reservations
      tags:
      - Reservations
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              example: []
        '401':
          description: Unauthorized
    post:
      summary: Create reservations
      tags:
      - Reservations
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                id: 6
                start_date: '2023-01-16'
                end_date: '2023-01-16'
                user_id: 41
                tour_id: 18
                created_at: '2023-06-22T12:53:00.962Z'
                updated_at: '2023-06-22T12:53:00.962Z'
                tour:
                  id: 18
                  name: Tour 4
                  city: Canada 4
                  price: '245.0'
                  video: https://www.youtube.com/watch?v=XxuPlSW4t6M&list=PLCawOXF4xaJLb9HwPWiizGBNupJszY6bR
                  status: false
                  user_id: 42
                  created_at: '2023-06-22T12:53:00.952Z'
                  updated_at: '2023-06-22T12:53:00.956Z'
                  des: Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta
                    a possimus impedit modi quia? Incidunt?
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reservation:
                  type: object
                  properties:
                    tour_id:
                      type: integer
                    start_date:
                      type: string
                      format: date
                    end_date:
                      type: string
                      format: date
              required:
              - start_date
              - end_date
              - tour_id
  "/reservations/{id}":
    get:
      summary: Show reservation
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              example:
                id: 7
                start_date: '2023-02-12'
                end_date: '2023-04-13'
                user_id: 47
                tour_id: 21
                created_at: '2023-06-22T12:53:01.009Z'
                updated_at: '2023-06-22T12:53:01.009Z'
                tour:
                  id: 21
                  name: Tour 7
                  city: Canada 7
                  price: '245.0'
                  video: https://www.youtube.com/watch?v=XxuPlSW4t6M&list=PLCawOXF4xaJLb9HwPWiizGBNupJszY6bR
                  status: false
                  user_id: 48
                  created_at: '2023-06-22T12:53:01.003Z'
                  updated_at: '2023-06-22T12:53:01.007Z'
                  des: Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta
                    a possimus impedit modi quia? Incidunt?
        '401':
          description: Unauthorized
  "/tours":
    get:
      summary: list tours
      tags:
      - Tours
      responses:
        '200':
          description: Successful
          content:
            application/json:
              example:
              - id: 24
                name: Tour 10
                city: Canada 10
                price: '245.0'
                video: https://www.youtube.com/watch?v=XxuPlSW4t6M&list=PLCawOXF4xaJLb9HwPWiizGBNupJszY6bR
                status: false
                user_id: 54
                created_at: '2023-06-22T12:53:01.065Z'
                updated_at: '2023-06-22T12:53:01.068Z'
                des: Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta
                  a possimus impedit modi quia? Incidunt?
                image_url: "/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBIQT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--dbdc66dfb546211a08139d483d6c0d55227e7120/dominos.jpg"
    post:
      summary: Create tour
      tags:
      - Tours
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              example:
                id: 25
                name: Joyland
                city: Lahore
                price: '30.0'
                video: This is the video
                status: false
                user_id: 55
                created_at: '2023-06-22T12:53:01.087Z'
                updated_at: '2023-06-22T12:53:01.087Z'
                des: Just a small place to fun
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                city:
                  type: string
                price:
                  type: integer
                des:
                  type: string
                video:
                  type: string
                image:
                  type: string
                  format: binary
              required:
              - name
              - city
              - price
              - des
  "/my-tours":
    get:
      summary: list all tours created by user
      tags:
      - Tours
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              example: []
  "/tours/{id}":
    get:
      summary: Show tour
      tags:
      - Tours
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              example:
                id: 27
                name: Tour 12
                city: Canada 12
                price: '245.0'
                video: https://www.youtube.com/watch?v=XxuPlSW4t6M&list=PLCawOXF4xaJLb9HwPWiizGBNupJszY6bR
                status: false
                user_id: 60
                created_at: '2023-06-22T12:53:01.122Z'
                updated_at: '2023-06-22T12:53:01.128Z'
                des: Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta
                  a possimus impedit modi quia? Incidunt?
        '401':
          description: Unauthorized
  "/users":
    post:
      summary: Create user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - email
              - password
  "/login":
    post:
      summary: Authenticate user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: user authenticated
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/users/{id}":
    get:
      summary: Get user by id
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              example:
                id: 67
                name: user 32
                email: user-test32@gmail.com
        '401':
          description: Unauthorized
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: apiKey
      name: Authorization
      in: header
